name: Terraform Demo

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Terraform environment (test or prod)'
        required: true
        default: 'test'
      auto_destroy:
        description: 'Destroy after demo (true/false)'
        required: true
        default: 'true'

jobs:
  demo:
    runs-on: ubuntu-latest
    environment: demo
    permissions:
      id-token: write
      contents: read
    env:
      TF_IN_AUTOMATION: true
      TF_PLUGIN_CACHE_DIR: ${{ github.workspace }}/.terraform-cache
      TERRAFORM_ENV: ${{ github.event.inputs.environment }}
      AUTO_DESTROY: ${{ github.event.inputs.auto_destroy }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        working-directory: infra
        run: |
          mkdir -p "${TF_PLUGIN_CACHE_DIR}"
          terraform init -input=false -backend-config=backend-${{ env.TERRAFORM_ENV }}.hcl

      - name: Terraform Plan
        working-directory: infra
        run: terraform plan -var-file=environments/${{ env.TERRAFORM_ENV }}/vars.tfvars -out=tfplan

      - name: Terraform Apply
        working-directory: infra
        run: terraform apply -auto-approve tfplan

      - name: Run verification script
        working-directory: infra
        run: ./scripts/verify_nat.sh ${{ env.TERRAFORM_ENV }}

      - name: Collect probe logs
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets Key=tag:Project,Values=nat-alternative Key=tag:Environment,Values=${{ env.TERRAFORM_ENV }} Key=tag:Role,Values=probe \
            --parameters commands='sudo journalctl -u cloud-init --no-pager | tail -n 200' \
            --region ${{ secrets.AWS_REGION }} \
            --comment "Collect probe user-data logs" \
            --output text
        continue-on-error: true

      - name: Destroy (optional)
        if: env.AUTO_DESTROY == 'true'
        working-directory: infra
        run: terraform destroy -auto-approve -var-file=environments/${{ env.TERRAFORM_ENV }}/vars.tfvars
